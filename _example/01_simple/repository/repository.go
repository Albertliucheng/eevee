// Code generated by eevee. DO NOT EDIT!

package repository

import (
	"context"
	"database/sql"
	"simple/entity"
	"simple/model"
)

type Repository interface {
	User() User
	ToUser(*entity.User) *model.User
}

type RepositoryImpl struct {
	user func() User
}

func (r *RepositoryImpl) User() User {
	return r.user()
}

func New(ctx context.Context, tx *sql.Tx) *RepositoryImpl {
	var (
		repo *RepositoryImpl
		user *UserImpl
	)
	repo = &RepositoryImpl{user: func() User {
		if user != nil {
			return user
		}
		user = NewUser(ctx, tx)
		user.repo = repo
		return user
	}}
	return repo
}

func (r *RepositoryImpl) ToUser(value *entity.User) *model.User {
	return r.User().ToModel(value)
}
