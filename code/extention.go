package code

type CodeHelper interface {
	Package(string) string
}

const GeneratedMarker = "Code generated by eevee. DO NOT EDIT!"
const FuncGeneratedMarker = "generated by eevee"

func WrapError(h CodeHelper, msg string) *Statement {
	return Qual(h.Package("xerrors"), "Errorf").Call(Lit(msg), Err())
}

func AddStruct(f *File, name string, codes []Code) {
	f.Line()
	f.Add(GoType().Id(name).Struct(codes...))
}

func TypeDef(f *File, name string, c Code) {
	f.Line()
	f.Add(GoType().Id(name).Add(c))
}

type Import interface {
	GetPath() string
	GetName() string
}

type Imports interface {
	Each(func(Import))
}

func NewGeneratedFile(pkg string, imports Imports) *File {
	f := NewFile(pkg)
	f.HeaderComment(GeneratedMarker)
	imports.Each(func(imp Import) {
		f.ImportName(imp.GetPath(), imp.GetName())
	})
	return f
}
