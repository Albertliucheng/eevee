package code

import (
	"github.com/dave/jennifer/jen"
)

type Code = jen.Code
type Dict = jen.Dict
type File = jen.File
type Group = jen.Group
type Options = jen.Options
type Statement = jen.Statement

var (
	DictFunc        = jen.DictFunc
	NewFile         = jen.NewFile
	NewFilePath     = jen.NewFilePath
	NewFilePathName = jen.NewFilePathName
	Add             = jen.Add
	Append          = jen.Append
	AppendFunc      = jen.AppendFunc
	Assert          = jen.Assert
	Block           = jen.Block
	BlockFunc       = jen.BlockFunc
	Bool            = jen.Bool
	Break           = jen.Break
	Byte            = jen.Byte
	Call            = jen.Call
	CallFunc        = jen.CallFunc
	Cap             = jen.Cap
	Case            = jen.Case
	CaseFunc        = jen.CaseFunc
	Chan            = jen.Chan
	Close           = jen.Close
	Comment         = jen.Comment
	Commentf        = jen.Commentf
	Complex         = jen.Complex
	Complex128      = jen.Complex128
	Complex64       = jen.Complex64
	Const           = jen.Const
	Continue        = jen.Continue
	Copy            = jen.Copy
	Custom          = jen.Custom
	CustomFunc      = jen.CustomFunc
	Default         = jen.Default
	Defer           = jen.Defer
	Defs            = jen.Defs
	DefsFunc        = jen.DefsFunc
	Delete          = jen.Delete
	Do              = jen.Do
	Dot             = jen.Dot
	Else            = jen.Else
	Empty           = jen.Empty
	Err             = jen.Err
	Error           = jen.Error
	Fallthrough     = jen.Fallthrough
	False           = jen.False
	Float32         = jen.Float32
	Float64         = jen.Float64
	For             = jen.For
	ForFunc         = jen.ForFunc
	Func            = jen.Func
	Go              = jen.Go
	Goto            = jen.Goto
	Id              = jen.Id
	If              = jen.If
	IfFunc          = jen.IfFunc
	Imag            = jen.Imag
	Index           = jen.Index
	IndexFunc       = jen.IndexFunc
	Int             = jen.Int
	Int16           = jen.Int16
	Int32           = jen.Int32
	Int64           = jen.Int64
	Int8            = jen.Int8
	Interface       = jen.Interface
	InterfaceFunc   = jen.InterfaceFunc
	Iota            = jen.Iota
	Len             = jen.Len
	Line            = jen.Line
	List            = jen.List
	ListFunc        = jen.ListFunc
	Lit             = jen.Lit
	LitByte         = jen.LitByte
	LitByteFunc     = jen.LitByteFunc
	LitFunc         = jen.LitFunc
	LitRune         = jen.LitRune
	LitRuneFunc     = jen.LitRuneFunc
	Make            = jen.Make
	Map             = jen.Map
	New             = jen.New
	Nil             = jen.Nil
	Null            = jen.Null
	Op              = jen.Op
	Panic           = jen.Panic
	Params          = jen.Params
	ParamsFunc      = jen.ParamsFunc
	Parens          = jen.Parens
	Print           = jen.Print
	PrintFunc       = jen.PrintFunc
	Println         = jen.Println
	PrintlnFunc     = jen.PrintlnFunc
	Qual            = jen.Qual
	Range           = jen.Range
	Real            = jen.Real
	Recover         = jen.Recover
	Return          = jen.Return
	ReturnFunc      = jen.ReturnFunc
	Rune            = jen.Rune
	Select          = jen.Select
	String          = jen.String
	Struct          = jen.Struct
	StructFunc      = jen.StructFunc
	Switch          = jen.Switch
	SwitchFunc      = jen.SwitchFunc
	Tag             = jen.Tag
	True            = jen.True
	Type            = jen.Type
	Uint            = jen.Uint
	Uint16          = jen.Uint16
	Uint32          = jen.Uint32
	Uint64          = jen.Uint64
	Uint8           = jen.Uint8
	Uintptr         = jen.Uintptr
	Values          = jen.Values
	ValuesFunc      = jen.ValuesFunc
	Var             = jen.Var
)
